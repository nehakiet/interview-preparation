package common.companies.linkedList;

public class InsertNodeLL {
    Node head;

    static class Node {
        int data;
        Node next;

        public Node(int data) {
            this.data = data;
            this.next = null;
        }

    }

    private void printNode() {
        Node current = head;
        while (current != null) {
            System.out.print(current.data + "-->");

            current = current.next;
        }
        System.out.print("null");
    }

    private Node insertNode(Node head, int value) {
        Node newNode = new Node(value);

            // Special case for head node
            if (head == null || head.data >= newNode.data) {
                newNode.next = head;
                head = newNode;
                return head;
            }

            // Locate the node after which the new node needs to be inserted
            Node current = head;
            while (current.next != null && current.next.data < newNode.data) {
                current = current.next;
            }

            // Insert the new node after 'current'
            newNode.next = current.next;
            current.next = newNode;

            return head;
        }

    public static void main(String[] args) {
        InsertNodeLL linkedList = new InsertNodeLL();
        linkedList.head = new InsertNodeLL.Node(4);
        InsertNodeLL.Node second = new InsertNodeLL.Node(5);
        InsertNodeLL.Node third = new InsertNodeLL.Node(7); //ll created but they aren't associated with each other
        linkedList.head.next = second;
        second.next = third;

        linkedList.head = linkedList.insertNode(linkedList.head,6);
        linkedList.printNode();
    }
}
